*render.nvim.txt*           For NVIM v0.9+           Last change: 2023 June 04

==============================================================================
Table of Contents                              *render.nvim-table-of-contents*

1. render.nvim                                       |render.nvim-render.nvim|
  - Features                                |render.nvim-render.nvim-features|
  - ü´° Commands                      |render.nvim-render.nvim-ü´°-commands|
  - Keymapping                            |render.nvim-render.nvim-keymapping|
  - Configuration                      |render.nvim-render.nvim-configuration|
  - üü∞ Screencapture equivalent|render.nvim-render.nvim-üü∞-screencapture-equivalent|
  - Installation                        |render.nvim-render.nvim-installation|
  - How does it work?              |render.nvim-render.nvim-how-does-it-work?|
  - Supported OS versions      |render.nvim-render.nvim-supported-os-versions|
  - Privacy & Security            |render.nvim-render.nvim-privacy-&-security|
  - Ackowledgements                  |render.nvim-render.nvim-ackowledgements|



==============================================================================
1. render.nvim                                       *render.nvim-render.nvim*

Neovim plugin to take screenshots of your Neovim session on MacOS.


FEATURES                                    *render.nvim-render.nvim-features*

- Capture image of window by process ID
- Capture video recording
- Capture image or video by window boundaries
- Capture to clipboard
- Capture to file
- Add window‚Äôs shadow in window capture mode
- Take capture after a delay
- Play sound effect on capture
- Flash window on capture
- Show clicks during video recording
- Show floating thumbnail after capture
- ‚Äç Open captures in quick view
- Open captures in quickfix list
- Automatically open or preview capture
- Limit capture video recording time
- Fine-tune cropping of window boundaries
- Image formats `png` `jpg` `pdf` `psd` `tga` `bmp` `gif` `tif`
- Video format `mov`


ü´° COMMANDS                          *render.nvim-render.nvim-ü´°-commands*

  --------------------------------------------------------------------------------------------------------------------
  Command                       API                                                   Description
  ----------------------------- ----------------------------------------------------- --------------------------------
  :Render {profilename}         require('render.api').render(string\|table\|nil)      Capture image or video recording

  :RenderDryRun {profilename}   require('render.api').dryrun(string\|table\|nil)      Execute render logic without
                                                                                      capturing result

  :RenderClean[!]               require('render.api').clean(table\|nil)               Delete existing captures in
                                                                                      output directory and reinstall
                                                                                      dependencies

  :RenderExplore                require('render.api').explore()                       Open render output directory in
                                                                                      Neovim

  :RenderQuickfix[!]            require('render.api').quickfix(table\|nil)            Toggle open output directory in
                                                                                      quickfix window

  :RenderInterrupt              require('render.api').interrupt()                     Send interrupt to stop video
                                                                                      recoring

  :RenderQuicklook              require('render.api').quicklook()                     Open all files in output
                                                                                      directory with quick look

  :RenderSetWindowInfo {pid}    require('render.api').set_window_info(integer\|nil)   Set the window information to
                                                                                      the active Neovim session or by
                                                                                      process ID
  --------------------------------------------------------------------------------------------------------------------

KEYMAPPING                                *render.nvim-render.nvim-keymapping*

TODO


CONFIGURATION                          *render.nvim-render.nvim-configuration*

TODO


üü∞ SCREENCAPTURE EQUIVALENT*render.nvim-render.nvim-üü∞-screencapture-equivalent*

  -------------------------------------------------------------------------------------------
  render.nvim option                      argument      description
  --------------------------------------- ------------- -------------------------------------
  features.sound_effect = false           -x            Do not play sounds

  profile.delay = <seconds>               -T<seconds>   Take the capture after a delay of

  profile.filetype = '<format>'           -t<format>    Image format to create, default is
                                                        png

  profile.image_capture_mode = 'bounds'   -R<x,y,w,h>   Capture screen rect

  profile.image_capture_mode = 'window'   -l<id>        Capture window with

  profile.mode = 'clipboard'              -c            Force screen capture to go to the
                                                        clipboard

  profile.mode = 'preview'                -u            Present UI after screencapture is
                                                        complete

  profile.show_clicks = true              -k            Show clicks in video recording mode

  profile.type = 'video'                  -v            Capture video recording of the screen

  profile.window_shadow = false           -o            In window capture mode, do not
                                                        capture the shadow of the window
  -------------------------------------------------------------------------------------------

INSTALLATION                            *render.nvim-render.nvim-installation*


PREREQUISITES AND DEPENDENCIES ~

  -------------------------------------------------------------------------
  Name                         Description                   Installation
                                                             Method
  ---------------------------- ----------------------------- --------------
  Neovim v0.9+                 Neovim version 0.9 or greater User installed

  screencapture                Captures image and video of   Included on
                               the whole, or part of the     Mac
                               screen                        

  qlmanage                     Displays quick look previews  Included on
                                                             Mac

  pdubs                        Retreives window information  Downloaded by
                               for the Neovim session        render.nvim

  curl, shasum, tar            Required to download,         Included on
                               extract, and verify pdubs     Mac
                               binary                        
  -------------------------------------------------------------------------

USING LAZY.NVIM ~

>lua
      {
        "mikesmithgh/render.nvim",
        config = function()
          require("render").setup()
        end,
      }
<


USING NEOVIM‚ÄôS BUILT-IN PACKAGE SUPPORT PACK ~

>bash
    mkdir -p "$HOME/.local/share/nvim/site/pack/mikesmithgh/start/"
    cd $HOME/.local/share/nvim/site/pack/mikesmithgh/start
    git clone git@github.com:mikesmithgh/render.nvim.git
    nvim -u NONE -c "helptags render.nvim/doc" -c q
    echo "require('render').setup()" >> "$HOME/.config/nvim/init.lua" 
<


HOW DOES IT WORK?                  *render.nvim-render.nvim-how-does-it-work?*

- Window information such as window ID, size and position are determined for the current process using pdubs <https://github.com/mikesmithgh/pdubs>
- Window information and configuration options are parsed and translated to a screencapture <https://ss64.com/osx/screencapture.html> command


SUPPORTED OS VERSIONS          *render.nvim-render.nvim-supported-os-versions*

- macOS 13 Ventura
- macOS 12 Monterey
- macOS 11 Big Sur


PRIVACY & SECURITY                *render.nvim-render.nvim-privacy-&-security*

Screen recording must be enabled in order for render.nvim to take
screencaptures. This will need to be enabled for the application that is
running Neovim. For example, Kitty, Alacritty, iTerm2, Neovide, etc. The first
time you attempt to take a screenshot, you may see a prompt to allow access.

Open System Settings and enable screen recording for your application.

- Choose Apple menu > System Settings, then click Privacy & Security in the sidebar. (You may need to scroll down.)
- Click Screen Recording.
- Turn screen recording on or off for each app in the list.


ACKOWLEDGEMENTS                      *render.nvim-render.nvim-ackowledgements*

- gruvsquirrel.nvim <https://github.com/mikesmithgh/gruvsquirrel.nvim> Neovim colorscheme written in Lua inspired by gruvbox
- ü¶¨ pdubs <https://github.com/mikesmithgh/pdubs> A simple command-line utility to return macos window information for a given pid.

==============================================================================
2. Links                                                   *render.nvim-links*

1. *screencapture-prompt*: https://github.com/mikesmithgh/render.nvim/assets/10135646/e363c75f-4b00-489b-b0ea-17215a0d37cb
2. *screencapture-settings*: https://github.com/mikesmithgh/render.nvim/assets/10135646/8fe09d3f-2427-4633-abf2-a54e9c9b8fb4

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
