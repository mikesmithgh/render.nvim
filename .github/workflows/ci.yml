name: ci

on:
  push:
    branches:
      - 'main'
  pull_request: 
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AHA_VERSION: 0.5.1
  PLAYWRIGHT_VERSION: 1.32.0
  NODE_PATH: /usr/lib/node_modules:/usr/local/lib/node_modules:/opt/homebrew/lib/node_modules
  EDITOR: nvim

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Neovim nightly
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: nightly

      - name: Configure Render plugin
        run: |
          mkdir -p "$HOME/.local/share/nvim/site/pack/mikesmithgh/start/"
          cp -r . "$HOME/.local/share/nvim/site/pack/mikesmithgh/start/render.nvim/"
          mkdir -p "$HOME/.config/nvim"
          cat <<'EOF' >> "$HOME/.config/nvim/init.lua"

          require('render').setup({
            scale = '200%',
            notify = {
              level = vim.log.levels.OFF,
            },
          })
          vim.defer_fn(function()
            require('render.core').render()
          end, 2000)

          EOF

      - name: Configure Gruvsquirrel plugin
        run: |
          mkdir -p "$HOME/.local/share/nvim/site/pack/mikesmithgh/start/"
          cd "$HOME/.local/share/nvim/site/pack/mikesmithgh/start/"
          git clone https://github.com/mikesmithgh/gruvsquirrel.nvim.git
          cat <<'EOF' >> "$HOME/.config/nvim/init.lua"

          vim.cmd([[colorscheme gruvsquirrel]])

          EOF

      - name: Install aha
        run: |
          mkdir -p "$HOME/.local/bin"
          cd "$HOME/.local/bin"
          curl -L "https://github.com/theZiz/aha/archive/refs/tags/$AHA_VERSION.tar.gz" -o aha.tar.gz
          tar --strip-components=1 -xvf aha.tar.gz
          make

      - name: Install playwright
        run: |
          sudo npm config --global set update-notifier false
          sudo npm install --global @playwright/test@${PLAYWRIGHT_VERSION}
          npx --yes playwright@${PLAYWRIGHT_VERSION} install --with-deps chromium

      - name: Render test
        run: |
          tmux new-session -d -s render
          tmux send-keys -t render 'nvim -c "set columns=156 lines=72"' Enter

          wait=0
          until [ $wait -gt 60 ] || (cd "$HOME/.local/share/nvim/render/output" && [ $(ls -1 *.png 2>/dev/null | wc -l) != 0 ]); do 
            echo "waiting for file with png file extension..."
            wait=$((wait + 5)) 
            sleep 5
          done
          if [ $wait -gt 60 ]; then exit 1; fi
          cd "$HOME/.local/share/nvim/render/output"
          ls -1 | grep 'cat$' | xargs cat

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: ~/.local/share/nvim/render/output

      - name: Push output to wiki repo
        run: | 
          cd "$GITHUB_WORKSPACE/.github/scripts"
          ./push_output_to_wiki_repo.sh --ssh-deploy-key "${{ secrets.RENDER_WIKI_DEPLOY_KEY }}" --source-dir "$HOME/.local/share/nvim/render/output" --target-dir "$GITHUB_HEAD_REF" 

      # # for debugging
      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1
